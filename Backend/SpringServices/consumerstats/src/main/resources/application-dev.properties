##  DATABASE
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.properties.hibernate.jdbc.time_zone=Europe/Rome

# default values none | update | create-drop
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mariadb://db:3306/stateadb?user=statea&password=[xsIzA3OOL8gl/DI

# This will ensure that, after Hibernate schema creation is performed then additionally schema.sql is read for any additional schema
# changes and data.sql is executed to populate the database
spring.jpa.defer-datasource-initialization=true
# This will ensure we read schema.sql and data.sql for initialization of DB
spring.sql.init.mode=always

# Show all queries
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false

logging.level.org.hibernate.SQL=TRACE
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework=INFO

spring.kafka.security.protocol=SSL
spring.kafka.bootstrap-servers=kafka:9093
spring.kafka.ssl.key-store-location=file:/home/spring/client-certs/kafka.consumerstats.keystore.jks
spring.kafka.ssl.key-store-password=mimimmi
spring.kafka.ssl.key-password=mimimmi
spring.kafka.ssl.trust-store-location=file:/home/spring/client-certs/kafka.consumerstats.truststore.jks
spring.kafka.ssl.trust-store-password=mimimmi

# sets the listener processing one record at a time, unless the app encounters an error
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=RECORD
spring.kafka.listener.type=single

spring.kafka.consumer.group-id=consumerstats
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=errormessage:its.statea.consumer.queue.message.ErrorMessage,istatrecordmessage:its.statea.consumer.queue.message.IstatRecordMessage,mymessage:its.statea.consumer.queue.message.MyMessage,accommodationtype:its.statea.consumer.queue.istatapi.entity.AccommodationType,district:its.statea.consumer.queue.istatapi.entity.District,istatrecordabstract:its.statea.consumer.queue.istatapi.entity.IstatRecordAbstract,istatrecordmonth:its.statea.consumer.queue.istatapi.entity.IstatRecordMonth,istatrecordyear:its.statea.consumer.queue.istatapi.entity.IstatRecordYear,observationtype:its.statea.consumer.queue.istatapi.entity.ObservationType,country:its.statea.consumer.queue.countriesapi.entity.Country,istatrecordmonthmessage:its.statea.consumer.queue.message.IstatRecordMonthMessage,istatrecordyearmessage:its.statea.consumer.queue.message.IstatRecordYearMessage

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=errormessage:its.statea.consumer.queue.message.ErrorMessage